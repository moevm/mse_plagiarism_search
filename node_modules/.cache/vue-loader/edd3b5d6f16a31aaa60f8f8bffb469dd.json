{"remainingRequest":"/Users/artembutko/WebstormProjects/mse-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/artembutko/WebstormProjects/mse-app/src/components/DatabaseTable.vue?vue&type=style&index=0&id=64793193&scoped=true&lang=css&","dependencies":[{"path":"/Users/artembutko/WebstormProjects/mse-app/src/components/DatabaseTable.vue","mtime":1601496552470},{"path":"/Users/artembutko/WebstormProjects/mse-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/artembutko/WebstormProjects/mse-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/artembutko/WebstormProjects/mse-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/artembutko/WebstormProjects/mse-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/artembutko/WebstormProjects/mse-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jdXN0b21QYWdpbmF0aW9uID4gbGkgPiBhIHsKICBjb2xvcjogcmVkOwp9Cg=="},{"version":3,"sources":["DatabaseTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0JA;AACA;AACA","file":"DatabaseTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"overflow-auto\">\n    <!-- Main table element -->\n    <b-table\n        show-empty\n        striped\n        bordered\n        head-variant=\"light\"\n        stacked=\"md\"\n        :items=\"items\"\n        :fields=\"fields\"\n        :current-page=\"currentPage\"\n        :per-page=\"perPage\"\n        :filter=\"filter\"\n        :filter-included-fields=\"filterOn\"\n        :sort-by.sync=\"sortBy\"\n        :sort-desc.sync=\"sortDesc\"\n        :sort-direction=\"sortDirection\"\n        :sort-compare=\"dateCompare\"\n        @filtered=\"onFiltered\"\n    >\n\n      <template v-slot:cell(actions)=\"row\">\n        <b-button size=\"sm\" @click=\"info(row.item, row.index, $event.target)\" class=\"mr-40\">\n          Info modal\n        </b-button>\n        <b-button size=\"sm\" @click=\"row.toggleDetails\" class=\"ml-5\">\n          {{ row.detailsShowing ? 'Hide' : 'Show' }} Details\n        </b-button>\n      </template>\n\n      <template v-slot:row-details=\"row\">\n        <b-card>\n          <ul>\n            <li v-for=\"(value, key) in row.item\" :key=\"key\">{{ key }}: {{ value }}</li>\n          </ul>\n        </b-card>\n      </template>\n    </b-table>\n\n    <!-- Info modal -->\n    <b-modal :id=\"infoModal.id\" :title=\"infoModal.title\" ok-only @hide=\"resetInfoModal\">\n      <pre>{{ infoModal.content }}</pre>\n    </b-modal>\n\n    <!-- User Interface controls -->\n    <b-row>\n      <b-col sm=\"2\">\n          <b-form-select\n              v-model=\"perPage\"\n              id=\"perPageSelect\"\n              size=\"sm\"\n              :options=\"pageOptions\"\n          ></b-form-select>\n      </b-col>\n\n      <b-col>\n        <b-pagination\n            v-model=\"currentPage\"\n            :total-rows=\"totalRows\"\n            :per-page=\"perPage\"\n            size=\"sm\"\n            align=\"right\"\n        ></b-pagination>\n      </b-col>\n    </b-row>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      items: [\n        { lines: 40, filename: 'my_database.sql', date: \"02.03.04\" },\n        { lines: 41, filename: 'my_database2.sql', date: \"03.03.04\" },\n        { lines: 42, filename: 'my_database3.sql', date: \"04.03.14\" },\n        { lines: 43, filename: 'my_database4.sql', date: \"05.03.05\" },\n        { lines: 44, filename: 'my_database5.sql', date: \"06.03.15\" },\n      ],\n\n\n\n\n\n      fields: [\n        { key: 'filename', label: 'Filename', sortable: true, sortDirection: 'desc' },\n        { key: 'lines', label: 'Lines of code', sortable: true, class: 'text-center' },\n        { key: 'date', label: 'Date of download', sortable: true, formatter: \"formatDateAssigned\", sortDirection: 'desc'},\n        { key: 'actions', label: 'Actions' }\n      ],\n\n\n      totalRows: 1,\n      currentPage: 1,\n      perPage: 5,\n      pageOptions: [5, 10, 15],\n      sortBy: '',\n      sortDesc: false,\n      sortDirection: 'asc',\n      filter: null,\n      filterOn: [],\n      infoModal: {\n        id: 'info-modal',\n        title: '',\n        content: ''\n      }\n    }\n  },\n  computed: {\n    sortOptions() {\n      // Create an options list from our fields\n      return this.fields\n          .filter(f => f.sortable)\n          .map(f => {\n            return { text: f.label, value: f.key }\n          })\n    }\n  },\n  mounted() {\n    // Set the initial number of items\n    this.totalRows = this.items.length\n  },\n  methods: {\n    dateCompare(itemA, itemB, key) {\n      if (key === 'date') {\n        let a = (itemA[key] === null?'00.00.0000':itemA[key]).split('.');\n        let b = (itemB[key] === null?'00.00.0000':itemB[key]).split('.');\n        return parseInt(`${a[2]}${a[1]}${a[0]}`) - parseInt(`${b[2]}${b[1]}${b[0]}`);\n      } else {\n        return false;\n      }\n    },\n\n    info(item, index, button) {\n      this.infoModal.title = `Row index: ${index}`\n      this.infoModal.content = JSON.stringify(item, null, 2)\n      this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n    },\n    resetInfoModal() {\n      this.infoModal.title = ''\n      this.infoModal.content = ''\n    },\n    onFiltered(filteredItems) {\n      // Trigger pagination to update the number of buttons/pages due to filtering\n      this.totalRows = filteredItems.length\n      this.currentPage = 1\n    }\n  }\n}\n</script>\n\n<style scoped>\n.customPagination > li > a {\n  color: red;\n}\n</style>\n"]}]}